
import mysql.connector
from dash import Dash, html, dash_table, dcc
import plotly.express as px
import pandas as pd

def createConnection(user_name, database_name, user_password, host, port):
    cnx = mysql.connector.connect(user=user_name, database=database_name, password=user_password, host=host, port=port)
    cursor = cnx.cursor()
    return (cnx, cursor)

def select_data():
    """Selects all the data from the database"""
    try:
        # Create a connection to the database
        cnx, cursor = createConnection('root', 'iot_situacion_problema', 'Calcetas8', 'localhost', '3306')

        # Query the database
        query = ("SELECT * FROM dht_data")

        # Execute the query
        cursor.execute(query)

        # Get the data
        data = cursor.fetchall()

        # Return the data
        return data
    
    except mysql.connector.Error as err:
        """Handle possible errors"""
        if err.errno == mysql.connector.errorcode.ER_ACCESS_DENIED_ERROR:
            print("Something is wrong with your user name or password")
        elif err.errno == mysql.connector.errorcode.ER_BAD_DB_ERROR:
            print("Database does not exist")
        else:
            print(err)
    finally:
        """Close the connection"""
        if ('cnx' in locals() or 'cnx' in globals()) and ('cursor' in locals() or 'cursor' in globals()):
            cnx.close()
            cursor.close()
def select_():
    cnx, cursor = createConnection('root', 'iot_situacion_problema', 'Calcetas8', 'localhost', '3306')
    query = "SELECT * FROM dht_data" 
    cursor.execute(query)
    data = cursor.fetchall()
    return data
data = select_()

data = pd.DataFrame(data, columns=["humidity", "id", "temperature","date_time"])
app = Dash("IoT Situación Problema - Datos DH7")
app.layout = html.Div([
    html.Div(
        children=[
            html.H1("Humidity & Temperature vs ID", style={'text-align': 'center'}),
            html.P("A continuación, se muestra una grâfica de humedad y temperatura basada en los datos aleatorios de la base de datos."),
            dcc.Graph(figure=px.line(data, x='id', y=['humidity', 'temperature'], title="Temperature & Humidity")),  
        ])
])
app.run_server(debug=True)
